kind: Service
apiVersion: v1
metadata:
  namespace: PLACEHOLDER_NAMESPACE
  name: PLACEHOLDER_SERVICE_NAME
spec:
  selector:
    app: PLACEHOLDER_SERVICE_NAME
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: PLACEHOLDER_NAMESPACE
  name: PLACEHOLDER_SERVICE_NAME
  labels:
    app: PLACEHOLDER_SERVICE_NAME
spec:
  replicas: 2
  selector:
    matchLabels:
      app: PLACEHOLDER_SERVICE_NAME
  template:
    metadata:
      labels:
        app: PLACEHOLDER_SERVICE_NAME
    spec:
      containers:
      - name: PLACEHOLDER_SERVICE_NAME
        image: PLACEHOLDER_DOCKER_IMAGE
        ports:
        - containerPort: 80
        lifecycle:
          postStart:
            exec:
              command: ["python","configure.py"]
      nodeSelector:
        nodeGroupType: general

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  namespace: PLACEHOLDER_NAMESPACE
  name: PLACEHOLDER_SERVICE_NAME-purge-logs
spec:
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  schedule: "0 12 */1 * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: PLACEHOLDER_SERVICE_NAME-purge-logs
              image: PLACEHOLDER_DOCKER_IMAGE
              command: ["python","cron.py","purge-logs"]
          restartPolicy: Never
          nodeSelector:
            nodeGroupType: crons